<?xml version="1.0" encoding="UTF-8"?>

<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:hmi="urn:translationproject"
	targetNamespace="urn:translationproject" elementFormDefault="qualified"
	attributeFormDefault="unqualified">


	<include schemaLocation="Common.xsd" />


	<!-- *************************** -->
	<!-- DEFINITION OF COMPLEX-TYPES -->
	<!-- *************************** -->

	<complexType name="VerificationManager">

		<annotation>
			<documentation>
				The VerificationManager is the managing component of
				all components of a project which are used for verification
				purposes. It gives access to the available LengthCalculations,
				SpeechChecks and Fonts.
			</documentation>
		</annotation>

		<sequence>

			<element name="LengthCalculations" type="hmi:LengthCalculationList"
				minOccurs="0" maxOccurs="1">
				<annotation>
					<documentation>The list of LengthCalculations used for this
						project.
					</documentation>
				</annotation>
			</element>

			<element name="Fonts" type="hmi:FontList" minOccurs="0"
				maxOccurs="1">
				<annotation>
					<documentation>The list of Fonts used for this project.
					</documentation>
				</annotation>
			</element>

		</sequence>

		<attribute name="ConfigFilePrompts" type="hmi:File" use="optional">
			<annotation>
				<documentation>This is the configuration file for the prompt parser.
					If no file is given the internal configuration for prompts should
					be taken.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="ConfigFileCommands" type="hmi:File" use="optional">
			<annotation>
				<documentation>This is the configuration file for the command parser.
					If no file is given the internal configuration for commands should
					be taken.
				</documentation>			
			</annotation>
		</attribute>

	</complexType>


	<complexType name="LengthCalculation">
		<annotation>
			<documentation>A LengthCalculation checks the correctness of
				display-texts.
			</documentation>
		</annotation>

		<attribute name="Name" type="string" use="required">
			<annotation>
				<documentation>The name of a length calculation. This information is
					meant to be for the user.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="Id" type="hmi:LengthCalculationId" use="required">
			<annotation>
				<documentation>The ID of a length calculation. This information is
					meant to be for the computer and is used internally for uniquely
					referencing a length calculation.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="ForFontType" type="hmi:FontType" use="optional"
			default="TrueType">
			<annotation>
				<documentation>The length calculation is intended for fonts of this
					type. If fonts of a different type will be passed to the
					length-calculation unpredictable results can occur.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="FileName" type="hmi:File" use="optional">
			<annotation>
				<documentation>The name of the file should give access to the
					length-calculation. Different notations can be used (path-names,
					URLs, ...). If a relative notation is used then the absolute name
					can be constructed in combination with 'Basedir' from the
					container
					element.
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<complexType name="LengthCalculationList">
		<annotation>
			<documentation>A container-data structure for LengthCalculations.
			</documentation>
		</annotation>
		<sequence>
			<element name="LengthCalculation" type="hmi:LengthCalculation"
				minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation>The list of LengthCalculations.</documentation>
				</annotation>
			</element>
		</sequence>

		<attribute name="Default" type="hmi:LengthCalculationId"
			use="optional">
			<annotation>
				<documentation>One LengthCalculation can be marked as the default
					LengthCalculation. This LengthCalculation is then used on elements
					which don't specify a LengthCalculation. Explicitly specifying a
					LengthCalculation is only needed on elements which don't use the
					default.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="Basedir" type="hmi:Directory" use="optional">
			<annotation>
				<documentation>If the length-calculations use a relative notation,
					then the absolute notation can be constructed in combination with
					this attribute.
				</documentation>
			</annotation>
		</attribute>

	</complexType>


	<complexType name="Font">
		<attribute name="Name" type="string" use="required">
			<annotation>
				<documentation>
					The name of a font. This information is meant to be
					for the user.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="Id" type="hmi:FontId" use="required">
			<annotation>
				<documentation>
					The ID of a font. This information is meant to be for
					the computer and is used internally for uniquely referencing a
					font.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="Type" type="hmi:FontType" use="optional"
			default="TrueType">
			<annotation>
				<documentation>The type of this font.</documentation>
			</annotation>
		</attribute>

		<attribute name="FileName" type="hmi:File" use="required">
			<annotation>
				<documentation>
					The name of the file should give access to the file.
					Different notations can be used (path-names, URLs, ...). If a
					relative notation is used then the absolute name can be constructed
					in combination with 'Basedir' from the container-element.
				</documentation>
			</annotation>
		</attribute>

	</complexType>

	<complexType name="FontList">
		<annotation>
			<documentation>A container-data structure for fonts.</documentation>
		</annotation>

		<sequence>
			<element name="Font" type="hmi:Font" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation>The list of fonts.</documentation>
				</annotation>
			</element>
		</sequence>

		<attribute name="Default" type="hmi:FontId" use="optional">
			<annotation>
				<documentation>One font can be marked as the default font. This font
					is then used on elements which don't specify a font. Explicitly
					specifying a font is only needed on elements which don't use the
					default.
				</documentation>
			</annotation>
		</attribute>

		<attribute name="Basedir" type="hmi:Directory" use="optional">
			<annotation>
				<documentation>If the fonts use a relative notation, then the
					absolute notation can be constructed in combination with this
					attribute.
				</documentation>
			</annotation>
		</attribute>

	</complexType>


	<!-- ************************** -->
	<!-- DEFINITION OF SIMPLE-TYPES -->
	<!-- ************************** -->

	<simpleType name="TranslationRole">
		<annotation>
			<documentation>The roles of how a project has to be translated.
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="Constrained">
				<annotation>
					<documentation>In a constrained translation the constraints have to
						be respected (e.g. length-constraints for display-texts and
						speech-constraints for speech-texts). Otherwise the state can't be
						finalized.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="Unconstrained">
				<annotation>
					<documentation>With this translation role it is possible to
						finalize a translation without respecting constraints.
					</documentation>
				</annotation>
			</enumeration>
		</restriction>
	</simpleType>

	<simpleType name="FontType">
		<annotation>
			<documentation>The types of fonts.</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="Raster">
				<annotation>
					<documentation>In raster fonts, a glyph is a bitmap that is used to
						draw a single character or symbol in the font.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="Vector">
				<annotation>
					<documentation>In vector fonts, a glyph is a collection of line
						endpoints that define the line segments which are used to draw a
						character or symbol in the font.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="TrueType">
				<annotation>
					<documentation>In TrueType fonts, a glyph is a collection of line
						and curve commands as well as a collection of hints. The line and
						curve commands are used to define the outline of the bitmap for a
						character or symbol in the TrueType font. The hints are used to
						adjust the length of the lines and shapes of the curves used to
						draw the character or symbol. These hints and the respective
						adjustments are based on the amount of scaling used to reduce or
						increase the size of the bitmap.
					</documentation>
				</annotation>
			</enumeration>
		</restriction>
	</simpleType>

	<simpleType name="FontAttribsList">
		<annotation>
			<documentation>A general purpose list of font-attributes given as
				strings.
			</documentation>
		</annotation>
		<list itemType="string"></list>
	</simpleType>

	<simpleType name="LengthCalculationId">
		<annotation>
			<documentation>LengthCalculations have this ID-type. IDs must be
				unique throughout the project.
			</documentation>
		</annotation>
		<restriction base="long"></restriction>
	</simpleType>

	<simpleType name="FontId">
		<annotation>
			<documentation>Fonts have this ID-type. IDs must be unique throughout
				the project.
			</documentation>
		</annotation>
		<restriction base="long"></restriction>
	</simpleType>

</schema>